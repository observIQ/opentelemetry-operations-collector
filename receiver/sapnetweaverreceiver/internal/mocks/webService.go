// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	models "github.com/GoogleCloudPlatform/opentelemetry-operations-collector/receiver/sapnetweaverreceiver/internal/models"
)

// MockWebService is an autogenerated mock type for the MockWebService type
type MockWebService struct {
	mock.Mock
}

// GetAlertTree provides a mock function with given fields:
func (_m *MockWebService) GetAlertTree() (*models.GetAlertTreeResponse, error) {
	ret := _m.Called()

	var r0 *models.GetAlertTreeResponse
	if rf, ok := ret.Get(0).(func() *models.GetAlertTreeResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetAlertTreeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInstanceProperties provides a mock function with given fields:
func (_m *MockWebService) GetInstanceProperties() (*models.GetInstancePropertiesResponse, error) {
	ret := _m.Called()

	var r0 *models.GetInstancePropertiesResponse
	if rf, ok := ret.Get(0).(func() *models.GetInstancePropertiesResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetInstancePropertiesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// EnqGetLockTable provides a mock function with given fields:
func (_m *MockWebService) EnqGetLockTable() (*models.EnqGetLockTableResponse, error) {
	ret := _m.Called()

	var r0 *models.EnqGetLockTableResponse
	if rf, ok := ret.Get(0).(func() *models.EnqGetLockTableResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.EnqGetLockTableResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockWebService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockWebService creates a new instance of MockWebService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockWebService(t mockConstructorTestingTnewMockWebService) *MockWebService {
	mock := &MockWebService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
